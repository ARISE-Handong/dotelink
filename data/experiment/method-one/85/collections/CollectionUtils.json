[
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.filterInverse(java.lang.Iterable\u003cT\u003e, org.apache.commons.collections4.Predicate\u003c? super T\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters()",
    "links": [
      {
        "sentenceLocation": {
          "line": 801,
          "column": 71
        },
        "testCodeLocation": {
          "line": 1163,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.removeAll(java.lang.Iterable\u003cE\u003e, java.lang.Iterable\u003c? extends E\u003e, org.apache.commons.collections4.Equator\u003c? super E\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testRemoveAllWithEquator()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1842,
          "column": 29
        },
        "testCodeLocation": {
          "line": 1856,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable\u003c? extends O\u003e, java.lang.Iterable\u003c? extends O\u003e, boolean)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1605,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1800,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.containsAny(java.util.Collection\u003c?\u003e, java.util.Collection\u003c?\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.containsAnyInCollection()",
    "links": [
      {
        "sentenceLocation": {
          "line": 444,
          "column": 8
        },
        "testCodeLocation": {
          "line": 338,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection\u003cC\u003e, java.lang.Iterable\u003c? extends C\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1184,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1643,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.isProperSubCollection(java.util.Collection\u003c?\u003e, java.util.Collection\u003c?\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection()",
    "links": [
      {
        "sentenceLocation": {
          "line": 524,
          "column": 8
        },
        "testCodeLocation": {
          "line": 644,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.emptyCollection()",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.emptyCollection()",
    "links": [
      {
        "sentenceLocation": {
          "line": 197,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1597,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.emptyIfNull(java.util.Collection\u003cT\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull()",
    "links": [
      {
        "sentenceLocation": {
          "line": 205,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1603,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(java.util.Collection\u003c?\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1485,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1106,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.removeAll(java.util.Collection\u003cE\u003e, java.util.Collection\u003c?\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1815,
          "column": 30
        },
        "testCodeLocation": {
          "line": 1523,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable\u003c? extends O\u003e, org.apache.commons.collections4.Predicate\u003c? super O\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.select()",
    "links": [
      {
        "sentenceLocation": {
          "line": 918,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1197,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.containsAll(java.util.Collection\u003c?\u003e, java.util.Collection\u003c?\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.containsAll()",
    "links": [
      {
        "sentenceLocation": {
          "line": 376,
          "column": 8
        },
        "testCodeLocation": {
          "line": 310,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.disjunction(java.lang.Iterable\u003c? extends O\u003e, java.lang.Iterable\u003c? extends O\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.disjunction()",
    "links": [
      {
        "sentenceLocation": {
          "line": 268,
          "column": 8
        },
        "testCodeLocation": {
          "line": 436,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.isEmpty(java.util.Collection\u003c?\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1471,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1074,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.sizeIsEmpty(java.lang.Object)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1441,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1032,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.addIgnoreNull(java.util.Collection\u003cT\u003e, T)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1166,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1354,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection\u003c?\u003e, java.util.Collection\u003c?\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection()",
    "links": [
      {
        "sentenceLocation": {
          "line": 546,
          "column": 8
        },
        "testCodeLocation": {
          "line": 555,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.retainAll(java.util.Collection\u003cC\u003e, java.util.Collection\u003c?\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testRetainAll()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1730,
          "column": 46
        },
        "testCodeLocation": {
          "line": 1491,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.permutations(java.util.Collection\u003cE\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testPermutations()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1702,
          "column": 41
        },
        "testCodeLocation": {
          "line": 1816,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable\u003c? extends O\u003e, java.lang.Iterable\u003c? extends O\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testCollate()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1596,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1778,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.filter(java.lang.Iterable\u003cT\u003e, org.apache.commons.collections4.Predicate\u003c? super T\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters()",
    "links": [
      {
        "sentenceLocation": {
          "line": 776,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1136,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.isFull(java.util.Collection\u003c? extends java.lang.Object\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.isFull()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1529,
          "column": 21
        },
        "testCodeLocation": {
          "line": 1393,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable\u003c? extends I\u003e, org.apache.commons.collections4.Transformer\u003c? super I, ? extends O\u003e, R)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.collect()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1116,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1264,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.predicatedCollection(java.util.Collection\u003cC\u003e, org.apache.commons.collections4.Predicate\u003c? super C\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1943,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1374,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable\u003c? extends O\u003e, org.apache.commons.collections4.Predicate\u003c? super O\u003e, R, R)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.selectWithOutputCollections()",
    "links": [
      {
        "sentenceLocation": {
          "line": 993,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1233,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection\u003c? extends E\u003e, java.util.Collection\u003c? extends E\u003e, org.apache.commons.collections4.Equator\u003c? super E\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator()",
    "links": [
      {
        "sentenceLocation": {
          "line": 583,
          "column": 47
        },
        "testCodeLocation": {
          "line": 597,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.isSubCollection(java.util.Collection\u003c?\u003e, java.util.Collection\u003c?\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection()",
    "links": [
      {
        "sentenceLocation": {
          "line": 503,
          "column": 8
        },
        "testCodeLocation": {
          "line": 503,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.containsAny(java.util.Collection\u003c?\u003e, T...)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.containsAnyInArray()",
    "links": [
      {
        "sentenceLocation": {
          "line": 410,
          "column": 8
        },
        "testCodeLocation": {
          "line": 375,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable\u003c? extends O\u003e, java.lang.Iterable\u003c? extends O\u003e, java.util.Comparator\u003c? super O\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.collateException2()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1629,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1756,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.reverseArray(java.lang.Object[])",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.reverse()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1500,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1709,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable\u003c? extends O\u003e, org.apache.commons.collections4.Predicate\u003c? super O\u003e, R)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.select()",
    "links": [
      {
        "sentenceLocation": {
          "line": 938,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1208,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.intersection(java.lang.Iterable\u003c? extends O\u003e, java.lang.Iterable\u003c? extends O\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.intersection()",
    "links": [
      {
        "sentenceLocation": {
          "line": 241,
          "column": 8
        },
        "testCodeLocation": {
          "line": 408,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator\u003c? extends I\u003e, org.apache.commons.collections4.Transformer\u003c? super I, ? extends O\u003e, R)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.collect()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1143,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1261,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable\u003c? extends O\u003e, java.lang.Iterable\u003c? extends O\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testSubtract()",
    "links": [
      {
        "sentenceLocation": {
          "line": 305,
          "column": 8
        },
        "testCodeLocation": {
          "line": 463,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator\u003cI\u003e, org.apache.commons.collections4.Transformer\u003c? super I, ? extends O\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.collect()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1087,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1279,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.extractSingleton(java.util.Collection\u003cE\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.extractSingleton()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1979,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1731,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection\u003cC\u003e, C...)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.addAllForElements()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1234,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1661,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable\u003c? extends O\u003e, org.apache.commons.collections4.Predicate\u003c? super O\u003e, R)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.selectRejected()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1038,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1252,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.retainAll(java.lang.Iterable\u003cE\u003e, java.lang.Iterable\u003c? extends E\u003e, org.apache.commons.collections4.Equator\u003c? super E\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testRetainAllWithEquator()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1776,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1944,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.getCardinalityMap(java.lang.Iterable\u003c? extends O\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap()",
    "links": [
      {
        "sentenceLocation": {
          "line": 470,
          "column": 8
        },
        "testCodeLocation": {
          "line": 186,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testSize_Array()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1388,
          "column": 8
        },
        "testCodeLocation": {
          "line": 948,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable\u003c? extends O\u003e, java.lang.Iterable\u003c? extends O\u003e, org.apache.commons.collections4.Predicate\u003cO\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate()",
    "links": [
      {
        "sentenceLocation": {
          "line": 325,
          "column": 19
        },
        "testCodeLocation": {
          "line": 490,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.transform(java.util.Collection\u003cC\u003e, org.apache.commons.collections4.Transformer\u003c? super C, ? extends C\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.transform1()",
    "links": [
      {
        "sentenceLocation": {
          "line": 834,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1308,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.maxSize(java.util.Collection\u003c? extends java.lang.Object\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.maxSize()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1566,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1424,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.union(java.lang.Iterable\u003c? extends O\u003e, java.lang.Iterable\u003c? extends O\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.union()",
    "links": [
      {
        "sentenceLocation": {
          "line": 223,
          "column": 8
        },
        "testCodeLocation": {
          "line": 391,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection\u003cC\u003e, java.util.Enumeration\u003c? extends C\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1218,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1652,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.get(java.lang.Object, int)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.getEnumeration()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1301,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1702,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable\u003c? extends O\u003e, org.apache.commons.collections4.Predicate\u003c? super O\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.selectRejected()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1014,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1253,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.transformingCollection(java.util.Collection\u003cE\u003e, org.apache.commons.collections4.Transformer\u003c? super E, ? extends E\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1952,
          "column": 8
        },
        "testCodeLocation": {
          "line": 1549,
          "column": 9
        }
      }
    ]
  },
  {
    "productionMethod": "org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable\u003cI\u003e, org.apache.commons.collections4.Transformer\u003c? super I, ? extends O\u003e)",
    "unitTestMethod": "org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator()",
    "links": [
      {
        "sentenceLocation": {
          "line": 1072,
          "column": 8
        },
        "testCodeLocation": {
          "line": 597,
          "column": 9
        }
      }
    ]
  }
]